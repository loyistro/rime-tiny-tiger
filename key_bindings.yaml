# Rime key bindings
# encoding: utf-8
#
# send 输出按键
# toggle 切换开关
# send_sequence 输出一串按键
# set_option 开某多选开关
# unset_option 关某多选开关
# select 选候选字
key_binder:
  bindings:
    ## 简繁转换
    - { when: always, accept: "Control+Shift+4",  toggle: simplification}
    - { when: always, accept: "Control+Shift+dollar",  toggle: simplification}

    ## 中英文切换
    # - { when: always, accept: "Control+Shift+at",  toggle: ascii_mode}
    # - { when: always, accept: "Control+Shift+2",  toggle: ascii_mode}

    ## 全半角切换
    # - { when: always, accept: "Control+Shift+numbersign",  toggle: full_shape}
    # - { when: always, accept: "Control+Shift+3",  toggle: full_shape} 

    ## 清屏
    - { when: composing, accept: Tab, send: Escape }
    
    ## 选候选词
    - { when: has_menu, accept: semicolon, send: 2 }
    - { when: has_menu, accept: apostrophe, send: 3 }
    
    ## 翻页
    - { when: has_menu, accept: comma, send: Page_Up }
    - { when: has_menu, accept: period, send: Page_Down }
    
    # - { when: always, accept: "Control+Shift+exclam",  select: .next}
    # - { when: always, accept: "Control+Shift+1",  select: .next}

    # - { when: composing, accept: "Control+p",  send: Up}
    # - { when: composing, accept: "Control+n",  send: Down}
    # - { when: composing, accept: "Control+b",  send: Left}
    # - { when: composing, accept: "Control+f",  send: Right}
    # - { when: composing, accept: "Control+a",  send: Home}
    # - { when: composing, accept: "Control+e",  send: End}
    # - { when: composing, accept: "Control+d",  send: Delete}
    # - { when: composing, accept: "Control+k",  send: "Shift+Delete"}
    # - { when: composing, accept: "Control+h",  send: BackSpace}
    # - { when: composing, accept: "Control+bracketleft",  send: Escape}
    # - { when: composing, accept: "Control+y",  send: Page_Up}
    # - { when: composing, accept: "Alt+v",  send: Page_Up}
    # - { when: composing, accept: "Control+v",  send: Page_Down}
    # - { when: composing, accept: ISO_Left_Tab,  send: "Shift+Left"}
    # - { when: composing, accept: "Shift+Tab",  send: "Shift+Left"}
